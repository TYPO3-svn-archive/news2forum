<?PHP/****************************************************************  Copyright notice**  (c) 2008 Martin Hesse <mail@martin-hesse.info>*  All rights reserved**  This script is part of the TYPO3 project. The TYPO3 project is*  free software; you can redistribute it and/or modify*  it under the terms of the GNU General Public License as published by*  the Free Software Foundation; either version 2 of the License, or*  (at your option) any later version.**  The GNU General Public License can be found at*  http://www.gnu.org/copyleft/gpl.html.**  This script is distributed in the hope that it will be useful,*  but WITHOUT ANY WARRANTY; without even the implied warranty of*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the*  GNU General Public License for more details.**  This copyright notice MUST APPEAR in all copies of the script!***************************************************************/require_once ( t3lib_extMgm::extPath('mm_forum').'pi1/class.tx_mmforum_postfactory.php' );class tx_news2forum_tcemainprocdm {    var $databaseTable = "tx_news2forum";   var $extKey = 'news2forum';  var $postfactory;    function processDatamap_postProcessFieldArray ($status, $table, $id, &$fieldArray, &$tcemain) {    #var_dump($status);  }    function processDatamap_afterDatabaseOperations ($status, $table, $id, &$fieldArray, &$tcemain) {    $this->conf         = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf'][$this->extKey]);        $this->mmConf       = unserialize($GLOBALS['TYPO3_CONF_VARS']['EXT']['extConf']['mm_forum']);    $this->mmConf['storagePID'] = $this->conf['storagePID'];        $this->postfactory  = t3lib_div::makeInstance('tx_mmforum_postfactory');    $this->postfactory->init($this->mmConf);        // if tt_news is affected    if($table == 'tt_news') {            $news_uid   = $tcemain->substNEWwithIDs[$id];      $author     = $this->conf['topic_poster'];      $forum_sid  = $this->conf['storagePID'];      $forum_pid  = $this->conf['forum_pid'];      $forum_uid  = $this->conf['forum_uid'];      $ip         = $_SERVER['REMOTE_ADDR'];            $subject    = $fieldArray['title'];      $date       = $fieldArray['datetime'];      $links      = $fieldArray['links'];            $content    = '';             if($fieldArray['author'] != '') {        $content .= '(' . $fieldArray['author']. ') ';      }            if($fieldArray['short'] != '') {        $content .= $fieldArray['short']. "\n\n";      }            $content .= $fieldArray['bodytext'];            $text       = $content;      // Check status      if($status == 'update' && $fieldArray['tx_news2forum_create_topic'] == 0)       {        /*        $updateData = array();        #$updateData['topic_poster'] = $author;        $updateData['topic_title']  = $subject;        $updateData['post_text']    = $text;        $updateData['topic_time']   = $date;        return $this->editThread($id,$updateData);*/        return false;      }      elseif ($status == 'delete') {        #die('delete');        return false;      }      elseif ($status == 'new' && $fieldArray['tx_news2forum_create_topic'] > 0)      {        // ToDo: Attachment, noUpdate        return $this->createThread($news_uid,$forum_sid,$author,$subject,$text,$date,$ip,$forum_uid,$links,0,true);                /*        $topic_uid = $this->postfactory->create_topic($forum_uid, $author, $subject, $text, $date, $ip, $attachment=0, $poll=0, $subscribe=false, $noUpdate=false);                if($topic_uid) {          // Insert relation          $insertArray_news2forum = array(            'news_id'				=> $news_uid,            'forum_id'			=> $topic_uid,          );          $GLOBALS['TYPO3_DB']->exec_INSERTquery($this->databaseTable,$insertArray_news2forum);        }*/      }          }    return true;  }        function createThread($news_uid,$pid,$author,$subject,$text,$date,$ip,$forum_uid,$links,$attachment=0,$noUpdate=false) {        // Generate topic record    $insertArrayTopic = array(      'pid'           => $pid,      'tstamp'        => time(),      'crdate'        => time(),      'topic_title'   => $subject,      'topic_poster'  => $author,      'topic_time'		=> $date,      'topic_is'      => $this->conf['topic_is'],      'forum_id'			=> $forum_uid,      'poll_id'			  => 0    );          // Insert topic record    if(! $GLOBALS['TYPO3_DB']->exec_INSERTquery('tx_mmforum_topics',$insertArrayTopic))    return false;        // Retrieve topic uid    $topic_uid = $GLOBALS['TYPO3_DB']->sql_insert_id();        // Generate post record    $insertArrayPost = array(			'pid'				    => $pid,			'tstamp'			  => time(),			'crdate'			  => time(),			'topic_id'			=> $topic_uid,			'forum_id'			=> $forum_uid,			'poster_id'			=> $author,			'post_time'			=> $date,			'poster_ip'			=> $ip,			'attachment'		=> $attachment		);				if(! $GLOBALS['TYPO3_DB']->exec_INSERTquery('tx_mmforum_posts',$insertArrayPost))				return false;					// Retrieve post uid		$post_uid = $GLOBALS['TYPO3_DB']->sql_insert_id();        if($post_uid === false) {      $GLOBALS['TYPO3_DB']->exec_DELETEquery('tx_mmforum_topics','uid='.$topic_uid);      return false;    }        if($attachment)  		$GLOBALS['TYPO3_DB']->exec_UPDATEquery('tx_mmforum_attachments','uid='.$attachment,array('post_id'=>$post_uid));  	    // Generate post text record    $insertArrayPostText = array(    	'pid'				  => $pid,    	'tstamp'			=> time(),    	'crdate'			=> time(),    	'post_id'			=> $post_uid,    	'post_text'		=> $text    );        if(!$GLOBALS['TYPO3_DB']->exec_INSERTquery('tx_mmforum_posts_text',$insertArrayPostText)) {			$GLOBALS['TYPO3_DB']->exec_DELETEquery('tx_mmforum_posts','uid=',$post_uid);			return false;		}        // Update first post record    $updateArrayTopics = array(      'topic_first_post_id'	=> $post_uid,      'topic_last_post_id'  => $post_uid,    );    $GLOBALS['TYPO3_DB']->exec_UPDATEquery('tx_mmforum_topics','uid='.$topic_uid,$updateArrayTopics);        // Update last post record    $updateArrayForums = array(      'forum_last_post_id'  => $post_uid,    );    $GLOBALS['TYPO3_DB']->exec_UPDATEquery('tx_mmforum_forums','uid='.$forum_uid,$updateArrayForums);        // Update topic and forum post counters    if(!$noUpdate) {      $this->postfactory->updateTopicPostCount($topic_uid);      $this->postfactory->updateForumPostCount($forum_uid);      $this->postfactory->updateUserPostCount($author);    } else {      $this->postfactory->updateQueue_addTopic($topic_uid);      $this->postfactory->updateQueue_addForum($forum_uid);      $this->postfactory->updateQueue_addUser($author);    }        // Insert relation  	$insertArray_news2forum = array(			'news_id'				=> $news_uid,			'forum_id'			=> $topic_uid,		);		$GLOBALS['TYPO3_DB']->exec_INSERTquery($this->databaseTable,$insertArray_news2forum);				// Update News and insert the link		if($this->conf['link'] == 1) {            $postLink = '<LINK http://' .  $_SERVER['HTTP_HOST'] . '/index.php?id=' . $this->conf['forum_pid'] . '&tx_mmforum_pi1[action]=list_post&tx_mmforum_pi1[tid]=' . $topic_uid . '&tx_mmforum_pi1[fid]=' . $this->conf['forum_uid'] . '>' . $this->conf['link_title'] . '</LINK>';            $links = $links != '' ? $postLink."\n".$links : $postLink;            $updateArrayNews = array(        'links'	=> $links,      );      $GLOBALS['TYPO3_DB']->exec_UPDATEquery('tt_news','uid='.$news_uid,$updateArrayNews);    }    		// All done		return true;  }  function editThread($news_id,$updateData) {        $updateArray = array();        $res = $GLOBALS['TYPO3_DB']->sql(TYPO3_db,"      SELECT         forum_id      FROM        " . $this->databaseTable . "      WHERE        news_id = " . $news_id . "      LIMIT 1    ");        if($GLOBALS['TYPO3_DB']->sql_num_rows($res)) {      while($row = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($res)) {                // Get Forum-ID        $forum_uid  = $row['forum_id'];                // Get Post-ID        $initPostId = $GLOBALS['TYPO3_DB']->sql(TYPO3_db,"SELECT topic_first_post_id FROM tx_mmforum_topics WHERE uid = " . $forum_uid);        if($GLOBALS['TYPO3_DB']->sql_num_rows($initPostId)) {         $getPostId = $GLOBALS['TYPO3_DB']->sql_fetch_assoc($initPostId);        }        $post_id    = $getPostId['topic_first_post_id'];                        if(is_array($updateData)) {          foreach ($updateData AS $affected_row => $data) {                      // Update Topic            if($affected_row == 'topic_title' && $data != '') {              $updateArrayTopics = array(                'topic_title'	=> $data,              );              $GLOBALS['TYPO3_DB']->exec_UPDATEquery('tx_mmforum_topics','uid='.$forum_uid,$updateArrayTopics);            }                        // Update post            if($affected_row == 'post_text' && $data != '') {              $updateArrayPosts = array(                'post_text'	  => $data,                'cache_text'  => $data,              );              $GLOBALS['TYPO3_DB']->exec_UPDATEquery('tx_mmforum_posts_text','post_id='.$post_id,$updateArrayPosts);            }                      }        }              }    }        return true;  } // END editThread();    }if (defined('TYPO3_MODE') && $TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/news2forum/class.tx_news2forum_tcemainprocdm.php'])	{	include_once($TYPO3_CONF_VARS[TYPO3_MODE]['XCLASS']['ext/news2forum/class.tx_news2forum_tcemainprocdm.php']);}?>